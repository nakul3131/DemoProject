@model DemoProject.Services.ViewModel.Parameter.Security.UserAuthenticationParameterViewModel
@using DemoProject.Services.HtmlHelpers
@using DemoProject.Services.ViewModel.Configuration

@{
    HeaderPartialModel headerPartialModel = new HeaderPartialModel("UAPMDF");
}

<!doctype html>
<html lang="en-US">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>User Authentication Parameter - Modify</title>
</head>
<body>
    <div class="container-fluid">
        @*======= First Row - For Header =======*@
        <div class="row">
            <div class="offset-1 col-10">
                @Html.Partial("Header", headerPartialModel)
            </div>
        </div>

        @*======= Second Row - Data Entry Page =======*@
        <div class="row mt-3">
            <div class="offset-1 col-10">
                <div class="card mb-3">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        {
                            <div class="card-body">
                                @*======= First  Row - Mandatory Mark =======*@
                                <div class="row mt-2">
                                    <div class="col-12">
                                        <h6 class="mb-2 text-right text-muted"><b class="mandatory-mark">&nbsp; Mandatory Field</b></h6>
                                    </div>
                                </div>

                                @*======= Second Row - Page Title =======*@
                                <div class="row mt-2">
                                    <div class="col-12">
                                        <h5 class="font-weight-bold mt-1">Modify</h5>
                                        <hr />
                                    </div>
                                </div>

                                @*Submit Error*@
                                @Html.ValidationMessage("SubmitError")

                                @*======= Third Row - Data Entry Page =======*@
                                <div class="row">
                                    <div class="col-12">
                                        @*Effective Date*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Effective Date")
                                            @Html.TextBoxFor(m => m.EffectiveDate, "{0:yyyy-MM-dd}", new { @class = "form-control mandatory-mark", @placeholder = "Enter Effective Date", @Type = "date", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.EffectiveDate)
                                        </div>

                                        @*EnableUserNameCaseSensetivity*@
                                        <div class="row form-group mt-5">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable User Name Case Sensetivity")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableUserNameCaseSensetivity, new { @id = "enable-username-case-sensetivity", @class = "form-control switch-input", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        @*EnablePasswordCaseSensetivity*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Password Case Sensetivity")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnablePasswordCaseSensetivity, new { @id = "enable-password-case-sensetivity", @class = "form-control switch-input", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        @*EnableSmartForgotPassword*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Smart Forgot Password")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableSmartForgotPassword, new { @id = "enable-smart-forgot-password", @class = "form-control switch-input", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        @*EnableDeviceAuthentication*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Device Authentication")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableDeviceAuthentication, new { @id = "enable-device-authentication", @class = "form-control switch-input", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        @*EnableMobileOTPForAuthentication*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Mobile OTP For Authentication")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableMobileOTPForAuthentication, new { @id = "authentication-mobile-otp", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="authentication-mobile-otp-display">
                                            @*AuthenticationMobileOTPDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Mobile OTP Data Type")
                                                @Html.TextBoxFor(m => m.AuthenticationMobileOTPDataType, new { @id = "authentication-mobile-otp-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Mobile OTP Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationMobileOTPDataType)
                                            </div>

                                            @*AuthenticationMobileOTPLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Mobile OTP Length")
                                                @Html.TextBoxFor(m => m.AuthenticationMobileOTPLength, new { @id = "authentication-mobile-otp-length", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Mobile OTP Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationMobileOTPLength)
                                            </div>

                                            @*PrefixStringForAuthenticationMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Authentication Mobile OTP")
                                                @Html.TextBoxFor(m => m.PrefixStringForAuthenticationMobileOTP, new { @id = "prefix-string-for-authentication-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Authentication Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForAuthenticationMobileOTP)
                                            </div>

                                            @*PostfixStringForAuthenticationMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Authentication Mobile OTP")
                                                @Html.TextBoxFor(m => m.PostfixStringForAuthenticationMobileOTP, new { @id = "postfix-string-for-authentication-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Authentication Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForAuthenticationMobileOTP)
                                            </div>

                                            @*IncludedCharactersForAuthenticationMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Authentication Mobile OTP")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForAuthenticationMobileOTP, new { @id = "included-characters-for-authentication-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Authentication Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForAuthenticationMobileOTP)
                                            </div>

                                            @*ExcludedCharactersForAuthenticationMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Authentication Mobile OTP")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForAuthenticationMobileOTP, new { @id = "excluded-characters-for-authentication-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Authentication Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForAuthenticationMobileOTP)
                                            </div>

                                            @*AuthenticationMobileOTPExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Mobile OTP Expiry Time")
                                                @Html.TextBoxFor(m => m.AuthenticationMobileOTPExpiryTime, new { @id = "authentication-mobile-otp-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Mobile OTP Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationMobileOTPExpiryTime)
                                            </div>

                                            @*MaximumResendForAuthenticationMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Authentication Mobile OTP")
                                                @Html.TextBoxFor(m => m.MaximumResendForAuthenticationMobileOTP, new { @id = "maximum-resend-for-authentication-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Authentication Mobile OTP", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForAuthenticationMobileOTP)
                                            </div>
                                        </div>

                                        @*EnableEmailCodeForAuthentication*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Email Code For Authentication")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableEmailCodeForAuthentication, new { @id = "authentication-email-code", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="authentication-email-code-display">
                                            @*AuthenticationEmailCodeDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Email Code Data Type")
                                                @Html.TextBoxFor(m => m.AuthenticationEmailCodeDataType, new { @id = "authentication-email-code-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Email Code Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationEmailCodeDataType)
                                            </div>

                                            @*AuthenticationEmailCodeLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Email Code Length")
                                                @Html.TextBoxFor(m => m.AuthenticationEmailCodeLength, new { @id = "authentication-email-code-length", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Email Code Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationEmailCodeLength)
                                            </div>

                                            @*PrefixStringForAuthenticationEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Authentication Email Code")
                                                @Html.TextBoxFor(m => m.PrefixStringForAuthenticationEmailCode, new { @id = "prefix-string-for-authentication-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Authentication Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForAuthenticationEmailCode)
                                            </div>

                                            @*PostfixStringForAuthenticationEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Authentication Email Code")
                                                @Html.TextBoxFor(m => m.PostfixStringForAuthenticationEmailCode, new { @id = "postfix-string-for-authentication-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Authentication Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForAuthenticationEmailCode)
                                            </div>

                                            @*IncludedCharactersForAuthenticationEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Authentication Email Code")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForAuthenticationEmailCode, new { @id = "included-characters-for-authentication-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Authentication Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForAuthenticationEmailCode)
                                            </div>

                                            @*ExcludedCharactersForAuthenticationEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Authentication Email Code")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForAuthenticationEmailCode, new { @id = "excluded-characters-for-authentication-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Authentication Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForAuthenticationEmailCode)
                                            </div>

                                            @*AuthenticationEmailCodeExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Authentication Email Code Expiry Time")
                                                @Html.TextBoxFor(m => m.AuthenticationEmailCodeExpiryTime, new { @id = "authentication-email-code-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Authentication Email Code Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AuthenticationEmailCodeExpiryTime)
                                            </div>

                                            @*MaximumResendForAuthenticationEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Authentication Email Code")
                                                @Html.TextBoxFor(m => m.MaximumResendForAuthenticationEmailCode, new { @id = "maximum-resend-for-authentication-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Authentication Email Code", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForAuthenticationEmailCode)
                                            </div>
                                        </div>

                                        @*EnableMobileOTPForClearingSession*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Mobile OTP For ClearingSession")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableMobileOTPForClearingSession, new { @id = "clearing-session-mobile-otp", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="clearing-session-mobile-otp-display">
                                            @*ClearingSessionMobileOTPDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Mobile OTP Data Type")
                                                @Html.TextBoxFor(m => m.ClearingSessionMobileOTPDataType, new { @id = "clearing-session-mobile-otp-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Mobile OTP Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionMobileOTPDataType)
                                            </div>

                                            @*ClearingSessionMobileOTPLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Mobile OTP Length")
                                                @Html.TextBoxFor(m => m.ClearingSessionMobileOTPLength, new { @id = "clearing-session-mobile-otp-length", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Mobile OTP Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionMobileOTPLength)
                                            </div>

                                            @*PrefixStringForClearingSessionMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Clearing Session Mobile OTP")
                                                @Html.TextBoxFor(m => m.PrefixStringForClearingSessionMobileOTP, new { @id = "prefix-string-for-clearing-session-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Clearing Session Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForClearingSessionMobileOTP)
                                            </div>

                                            @*PostfixStringForClearingSessionMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Clearing Session Mobile OTP")
                                                @Html.TextBoxFor(m => m.PostfixStringForClearingSessionMobileOTP, new { @id = "postfix-string-for-clearing-session-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Clearing Session Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForClearingSessionMobileOTP)
                                            </div>

                                            @*IncludedCharactersForClearingSessionMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Clearing Session Mobile OTP")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForClearingSessionMobileOTP, new { @id = "included-characters-for-clearing-session-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Clearing Session Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForClearingSessionMobileOTP)
                                            </div>

                                            @*ExcludedCharactersForClearingSessionMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Clearing Session Mobile OTP")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForClearingSessionMobileOTP, new { @id = "excluded-characters-for-clearing-session-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Clearing Session Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForClearingSessionMobileOTP)
                                            </div>

                                            @*ClearingSessionMobileOTPExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Mobile OTP Expiry Time")
                                                @Html.TextBoxFor(m => m.ClearingSessionMobileOTPExpiryTime, new { @id = "clearing-session-mobile-otp-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Mobile OTP Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionMobileOTPExpiryTime)
                                            </div>

                                            @*MaximumResendForClearingSessionMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Clearing Session Mobile OTP")
                                                @Html.TextBoxFor(m => m.MaximumResendForClearingSessionMobileOTP, new { @id = "maximum-resend-for-clearing-session-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Clearing Session Mobile OTP", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForClearingSessionMobileOTP)
                                            </div>
                                        </div>

                                        @*EnableEmailCodeForClearingSession*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Email Code For Clearing Session")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableEmailCodeForClearingSession, new { @id = "clearing-session-email-code", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="clearing-session-email-code-display">
                                            @*ClearingSessionEmailCodeDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Email Code Data Type")
                                                @Html.TextBoxFor(m => m.ClearingSessionEmailCodeDataType, new { @id = "clearing-session-email-code-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Email Code Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionEmailCodeDataType)
                                            </div>

                                            @*ClearingSessionEmailCodeLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Email Code Length")
                                                @Html.TextBoxFor(m => m.ClearingSessionEmailCodeLength, new { @id = "clearing-session-email-code-length", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Email Code Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionEmailCodeLength)
                                            </div>

                                            @*PrefixStringForClearingSessionEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Clearing Session Email Code")
                                                @Html.TextBoxFor(m => m.PrefixStringForClearingSessionEmailCode, new { @id = "prefix-string-for-clearing-session-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Clearing Session Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForClearingSessionEmailCode)
                                            </div>

                                            @*PostfixStringForClearingSessionEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Clearing Session Email Code")
                                                @Html.TextBoxFor(m => m.PostfixStringForClearingSessionEmailCode, new { @id = "postfix-string-for-clearing-session-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Clearing Session Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForClearingSessionEmailCode)
                                            </div>

                                            @*IncludedCharactersForClearingSessionEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Clearing Session Email Code")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForClearingSessionEmailCode, new { @id = "included-characters-for-clearing-session-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Clearing Session Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForClearingSessionEmailCode)
                                            </div>

                                            @*ExcludedCharactersForClearingSessionEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Clearing Session Email Code")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForClearingSessionEmailCode, new { @id = "excluded-characters-for-clearing-session-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Clearing Session Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForClearingSessionEmailCode)
                                            </div>

                                            @*ClearingSessionEmailCodeExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Clearing Session Email Code Expiry Time")
                                                @Html.TextBoxFor(m => m.ClearingSessionEmailCodeExpiryTime, new { @id = "clearing-session-email-code-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Clearing Session Email Code Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ClearingSessionEmailCodeExpiryTime)
                                            </div>

                                            @*MaximumResendForClearingSessionEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Clearing Session Email Code")
                                                @Html.TextBoxFor(m => m.MaximumResendForClearingSessionEmailCode, new { @id = "maximum-resend-for-clearing-session-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Clearing Session Email Code", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForClearingSessionEmailCode)
                                            </div>
                                        </div>

                                        @*EnableMobileOTPForUnlockAccount*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Mobile OTP For Unlock Account")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableMobileOTPForUnlockAccount, new { @id = "unlock-account-mobile-otp", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="unlock-account-mobile-otp-display">
                                            @*UnlockAccountMobileOTPDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Mobile OTP Data Type")
                                                @Html.TextBoxFor(m => m.UnlockAccountMobileOTPDataType, new { @id = "unlock-account-mobile-otp-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Mobile OTP Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountMobileOTPDataType)
                                            </div>

                                            @*UnlockAccountMobileOTPLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Mobile OTP Length")
                                                @Html.TextBoxFor(m => m.UnlockAccountMobileOTPLength, new { @id = "unlock-account-mobile-otp-length", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Mobile OTP Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountMobileOTPLength)
                                            </div>

                                            @*PrefixStringForUnlockAccountMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Unlock Account Mobile OTP")
                                                @Html.TextBoxFor(m => m.PrefixStringForUnlockAccountMobileOTP, new { @id = "prefix-string-for-unlock-account-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Unlock Account Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForUnlockAccountMobileOTP)
                                            </div>

                                            @*PostfixStringForUnlockAccountMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Unlock Account Mobile OTP")
                                                @Html.TextBoxFor(m => m.PostfixStringForUnlockAccountMobileOTP, new { @id = "postfix-string-for-unlock-account-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Unlock Account Mobile OTP", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForUnlockAccountMobileOTP)
                                            </div>

                                            @*IncludedCharactersForUnlockAccountMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Unlock Account Mobile OTP")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForUnlockAccountMobileOTP, new { @id = "included-characters-for-unlock-account-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Unlock Account Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForUnlockAccountMobileOTP)
                                            </div>

                                            @*ExcludedCharactersForUnlockAccountMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Unlock Account Mobile OTP")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForUnlockAccountMobileOTP, new { @id = "excluded-characters-for-unlock-account-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Unlock Account Mobile OTP", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForUnlockAccountMobileOTP)
                                            </div>

                                            @*UnlockAccountMobileOTPExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Mobile OTP Expiry Time")
                                                @Html.TextBoxFor(m => m.UnlockAccountMobileOTPExpiryTime, new { @id = "unlock-account-mobile-otp-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Mobile OTP Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountMobileOTPExpiryTime)
                                            </div>

                                            @*MaximumResendForUnlockAccountMobileOTP*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Unlock Account Mobile OTP")
                                                @Html.TextBoxFor(m => m.MaximumResendForUnlockAccountMobileOTP, new { @id = "maximum-resend-for-unlock-account-mobile-otp", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Unlock Account Mobile OTP", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForUnlockAccountMobileOTP)
                                            </div>
                                        </div>

                                        @*EnableEmailCodeForUnlockAccount*@
                                        <div class="row form-group mt-4">
                                            <div class="col-10">
                                                @Html.CustomLabel("Enable Email Code For Unlock Account")
                                            </div>
                                            <div class="text-right">
                                                <label class="switch switch-left-right">
                                                    @Html.CheckBoxFor(m => m.EnableEmailCodeForUnlockAccount, new { @id = "unlock-account-email-code", @class = "form-control switch-input toggle", required = "required" })
                                                    <span class="slider round">
                                                        <span class="on"><b>True</b></span><span class="off"><b>False</b></span>
                                                    </span>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="unlock-account-email-code-display">
                                            @*UnlockAccountEmailCodeDataType*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Email Code Data Type")
                                                @Html.TextBoxFor(m => m.UnlockAccountEmailCodeDataType, new { @id = "unlock-account-email-code-data-type", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Email Code Data Type", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountEmailCodeDataType)
                                            </div>

                                            @*UnlockAccountEmailCodeLength*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Email Code Length")
                                                @Html.TextBoxFor(m => m.UnlockAccountEmailCodeLength, new { @id = "unlock-account-email-code-length", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Email Code Length", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountEmailCodeLength)
                                            </div>

                                            @*PrefixStringForUnlockAccountEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Prefix String For Unlock Account Email Code")
                                                @Html.TextBoxFor(m => m.PrefixStringForUnlockAccountEmailCode, new { @id = "prefix-string-for-unlock-account-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Prefix String For Unlock Account Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PrefixStringForUnlockAccountEmailCode)
                                            </div>

                                            @*PostfixStringForUnlockAccountEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Postfix String For Unlock Account Email Code")
                                                @Html.TextBoxFor(m => m.PostfixStringForUnlockAccountEmailCode, new { @id = "postfix-string-for-unlock-account-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Postfix String For Unlock Account Email Code", @maxlength = "10", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PostfixStringForUnlockAccountEmailCode)
                                            </div>

                                            @*IncludedCharactersForUnlockAccountEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Included Characters For Unlock Account Email Code")
                                                @Html.TextBoxFor(m => m.IncludedCharactersForUnlockAccountEmailCode, new { @id = "included-characters-for-unlock-account-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Included Characters For Unlock Account Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.IncludedCharactersForUnlockAccountEmailCode)
                                            </div>

                                            @*ExcludedCharactersForUnlockAccountEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Excluded Characters For Unlock Account Email Code")
                                                @Html.TextBoxFor(m => m.ExcludedCharactersForUnlockAccountEmailCode, new { @id = "excluded-characters-for-unlock-account-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Excluded Characters For Unlock Account Email Code", @maxlength = "100", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.ExcludedCharactersForUnlockAccountEmailCode)
                                            </div>

                                            @*UnlockAccountEmailCodeExpiryTime*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Unlock Account Email Code Expiry Time")
                                                @Html.TextBoxFor(m => m.UnlockAccountEmailCodeExpiryTime, new { @id = "unlock-account-email-code-expiry-time", @class = "form-control mandatory-mark", @placeholder = "Enter Unlock Account Email Code Expiry Time", @Type = "time", @autocomplete = "off", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UnlockAccountEmailCodeExpiryTime)
                                            </div>

                                            @*MaximumResendForUnlockAccountEmailCode*@
                                            <div class="form-group">
                                                @Html.CustomLabel("Maximum Resend For Unlock Account Email Code")
                                                @Html.TextBoxFor(m => m.MaximumResendForUnlockAccountEmailCode, new { @id = "maximum-resend-for-unlock-account-email-code", @class = "form-control mandatory-mark", @placeholder = "Enter Maximum Resend For Unlock Account Email Code", @autocomplete = "off", onkeyup = "ToTextCapitalize()", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MaximumResendForUnlockAccountEmailCode)
                                            </div>
                                        </div>

                                        @*TokenExpiryTime*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Token Expiry Time ")
                                            @Html.TextBoxFor(m => m.TokenExpiredTime, new { @class = "form-control mandatory-mark", @placeholder = "Enter Token Expired Time", @Type = "time", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.TokenExpiredTime)
                                        </div>

                                        @*AllowNumberofTokenResends*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Allow Number of Token Resends")
                                            @Html.TextBoxFor(m => m.NumOfResendToken, new { @class = "form-control mandatory-mark", @placeholder = "Acceptable Range Between 0 AND 10", @Type = "number", @min = 0, @max = 10, @step = 1, @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.NumOfResendToken)
                                        </div>

                                        @*NumberofSuccessiveInvalidAttempt*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Number of Successive Invalid Attempt")
                                            @Html.TextBoxFor(m => m.SuccessiveInvalidAttempts, new { @class = "form-control mandatory-mark", @placeholder = "Acceptable Range Between 2 AND 10", @Type = "number", @min = 2, @max = 10, @step = 1, @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.SuccessiveInvalidAttempts)
                                        </div>

                                        @*NumberofSuccessiveCumulativeAttempt*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Number of Cumulative Invalid Attempt")
                                            @Html.TextBoxFor(m => m.CumulativeInvalidAttempts, new { @class = "form-control mandatory-mark", @placeholder = "Acceptable Range Between 50 And 999", @Type = "number", @min = 50, @max = 999, @step = 1, @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.CumulativeInvalidAttempts)
                                        </div>

                                        @*IntervalTimePeriodForResettingAttempts*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Interval Time Period For Resetting Attempts")
                                            @Html.TextBoxFor(m => m.IntervalOfResettingCumulativeInvalidAttempt, new { @class = "form-control mandatory-mark", @placeholder = "Time Period In Days. Acceptable Range Between 1 And 366", @Type = "number", @min = 1, @max = 366, @step = 1, @autocomplete = "off" })
                                            @Html.ValidationMessageFor(m => m.IntervalOfResettingCumulativeInvalidAttempt)
                                        </div>

                                        @*LockingTimePeriod*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Locking Time Period")
                                            <div class="row">
                                                <div class="col-8">
                                                    @Html.TextBoxFor(m => m.InvalidAttemptLockingTimePeriod, new { @class = "form-control mandatory-mark", @placeholder = "Acceptable Range Between 50 And 999", @Type = "number", @min = 50, @max = 999, @step = 1, @autocomplete = "off" })
                                                    @Html.ValidationMessageFor(m => m.InvalidAttemptLockingTimePeriod)
                                                </div>
                                                <div class="col-4">
                                                    <div class="mt-1 d-flex justify-content-between">
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(m => m.InvalidAttemptLockingTimePeriodIn, "S", new { @name = "TimePeriod" })
                                                            <label class="form-check-label pl-2 font-weight-bold">Second</label>
                                                        </div>
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(m => m.InvalidAttemptLockingTimePeriodIn, "M", new { @name = "TimePeriod" })
                                                            <label class="form-check-label pl-2 font-weight-bold">Minutes</label>
                                                        </div>
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(m => m.InvalidAttemptLockingTimePeriodIn, "H", new { @name = "TimePeriod" })
                                                            <label class="form-check-label pl-2 font-weight-bold">Hour</label>
                                                        </div>
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(m => m.InvalidAttemptLockingTimePeriodIn, "D", new { @name = "TimePeriod" })
                                                            <label class="form-check-label pl-2 font-weight-bold">Day</label>
                                                        </div>
                                                    </div>
                                                    @Html.ValidationMessageFor(m => m.InvalidAttemptLockingTimePeriodIn)
                                                </div>
                                            </div>
                                        </div>

                                        @*Note*@
                                        <div class="form-group">
                                            @Html.CustomLabel("Note")
                                            @Html.TextAreaFor(m => m.Note, new { @id = "note", @class = "form-control", @placeholder = "Enter Note", @autocomplete = "off", @maxlength = "1500", onkeyup = "ToTextCapitalize()" })
                                            @Html.ValidationMessageFor(m => m.Note)
                                        </div>

                                        @*ReasonForModification*@
                                        <div class="form-group">
                                            @Html.CustomLabel("ReasonForModification")
                                            @Html.TextAreaFor(m => m.ReasonForModification, new { @id = "reason-for-modification", @class = "form-control", @placeholder = "Enter Reason For Modification", @maxlength = "1500", @autocomplete = "off", onkeyup = "ToTextCapitalize()" })
                                            @Html.ValidationMessageFor(m => m.ReasonForModification)
                                        </div>

                                        @*PrmKeyForScript*@
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.PrmKeyForScript, new { @id = "prm-key", @class = "form-control d-none" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*Save/Submit Button*@
                            @Html.OperationFooter("Modify", "Exit", "Home", Model.Remark)
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script src="~/Scripts/Custom/UserAuthenticationParameter.js"></script>
<script>
    debugger;
    var prmkey = 0;
    if (@Model == null)
    {
        prmkey = (@Model == null);
    }
</script>